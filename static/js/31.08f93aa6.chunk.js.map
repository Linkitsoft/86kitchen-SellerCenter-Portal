{"version":3,"file":"static/js/31.08f93aa6.chunk.js","mappings":"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","sources":["components/Clickoutside/Clickoutside.js","components/Modals/Thankyou.jsx","pages/EditService/index.jsx","validationSchema/index.js"],"sourcesContent":["const Clickoutside = (componentRef, componentRef2, setCategoryPopup) => {\r\n    document.addEventListener(\"click\", handleClick);\r\n    return () => document.removeEventListener(\"click\", handleClick);\r\n    function handleClick(e) {\r\n        if (componentRef) {\r\n            const ref = componentRef.current\r\n            const ref2 = componentRef2.current\r\n            if (ref?.contains(e.target) && !ref2?.contains(e.target)) {\r\n                setCategoryPopup(false)\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default Clickoutside\r\n\r\n","import React, { useEffect, useRef } from 'react'\r\nimport Clickoutside from '../Clickoutside/Clickoutside';\r\nimport tick from \"../../assets/images/Admin-20 (50).png\"\r\n\r\nconst Thankyou = ({ setModal }) =>\r\n{\r\n    const Ref = useRef();\r\n    const Ref2 = useRef();\r\n\r\n    const handleAdd = () =>\r\n    {\r\n        setModal(\"\")\r\n    }\r\n\r\n\r\n    useEffect(() =>\r\n    {\r\n        Clickoutside(Ref, Ref2, setModal)\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={Ref} className='addCat'>\r\n            <div ref={Ref2} className='addCat_inner'>\r\n                <div className='addCat_thanks'>\r\n                    <img className='addCat_tick' src={tick} alt='' />\r\n                    <p className='addCat_msg'>Thank you for verifying your account</p>\r\n                    <p className='addCat_text'>Admin will review and approve your profile</p>\r\n                    <button onClick={handleAdd} className='addCat_ok'>Ok</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Thankyou","import React, { useState } from 'react'\r\nimport Sidebar from '../../components/Sidebar'\r\nimport star from \"../../assets/images/Admin-20 (20).png\"\r\nimport Thankyou from '../../components/Modals/Thankyou'\r\nimport backImg from \"../../assets/images/Admin-20 (29).png\"\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport { toast } from 'react-toastify'\r\nimport { serviceValidation } from '../../validationSchema'\r\n\r\nconst EditService = () =>\r\n{\r\n    const [banner, setBanner] = useState(null);\r\n    const [modal, setModal] = useState(\"\");\r\n    const navigate = useNavigate()\r\n\r\n    const handleFileChange = (event, type) =>\r\n    {\r\n        const file = event.target.files[0];\r\n\r\n        if (file)\r\n        {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () =>\r\n            {\r\n                const fileType = type;\r\n\r\n                if (fileType === 'banner')\r\n                {\r\n                    setBanner({\r\n                        file: file,\r\n                        previewURL: reader.result,\r\n                    });\r\n                }\r\n\r\n            };\r\n            reader.readAsDataURL(file);\r\n        } else\r\n        {\r\n            if (type === 'banner')\r\n            {\r\n                setBanner(null);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const initialValues = {\r\n        name: '',\r\n        category: '',\r\n        price: '',\r\n        item: '',\r\n        description: '',\r\n    };\r\n\r\n    const onSubmit = (values) =>\r\n    {\r\n        toast.success(\"Service updated successfully\")\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"mainLayout\">\r\n                {modal === 'verify' && <Thankyou setModal={setModal} />}\r\n                <div className=\"mainLayout_parent\">\r\n                    <Sidebar index={\"2b\"} />\r\n                    <div className=\"verify\">\r\n                        <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={serviceValidation}>\r\n                            <Form>\r\n                                <div className=\"addServ_header\">\r\n                                    <p className=\"addServ_title\"><img src={backImg} alt='' onClick={() => navigate(-1)} />Edit Services</p>\r\n                                </div>\r\n                                <div className=\"addServ_service\">\r\n                                    <div className=\"addServ_serviceMain\">\r\n                                        <p className=\"addServ_subhead\">Service Image</p>\r\n                                        <div>\r\n                                            <div className=\"addServ_uploadSec\">\r\n                                                {!banner &&\r\n                                                    <label htmlFor=\"bannerInput\">\r\n                                                        <img className=\"addServ_mini\" src={star} alt='' />\r\n                                                    </label>}\r\n                                                <input type=\"file\" id=\"bannerInput\" style={{ display: 'none' }} onChange={(e) => handleFileChange(e, 'banner')} />\r\n                                                {banner && <img className=\"addServ_file\" src={banner?.previewURL} alt='' />}\r\n                                                {banner && <i className=\"fa-solid fa-trash\" onClick={() => setBanner(null)}></i>}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"addServ_form\">\r\n                                            <div>\r\n                                                <p htmlFor=\"name\">Service Name</p>\r\n                                                <Field placeholder='Service name' type=\"text\" id=\"name\" name=\"name\" />\r\n                                                <ErrorMessage className=\"verify_err\" name=\"name\" component=\"div\" />\r\n                                            </div>\r\n                                            <div>\r\n                                                <p htmlFor=\"category\">Service Category</p>\r\n                                                <Field as=\"select\" id=\"category\" name=\"category\">\r\n                                                    <option value=\"Fiber\" selected hidden>Select Service Category</option>\r\n                                                    <option value=\"Fiber\">Storm Fiber</option>\r\n                                                    <option value=\"Optical\">Optical</option>\r\n                                                </Field>\r\n                                                <ErrorMessage className=\"verify_err\" name=\"category\" component=\"div\" />\r\n                                            </div>\r\n                                            <div>\r\n                                                <p htmlFor=\"name\">Total Price</p>\r\n                                                <Field type='number' placeholder='Enter total price' id=\"price\" name=\"price\" />\r\n                                                <ErrorMessage className=\"verify_err\" name=\"price\" component=\"div\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"addServ_form\">\r\n                                            <div>\r\n                                                <p htmlFor=\"name\">Choose Recommended Items</p>\r\n                                                <Field type='text' placeholder='Choose recommended items' id=\"item\" name=\"item\" />\r\n                                                <ErrorMessage className=\"verify_err\" name=\"item\" component=\"div\" />\r\n                                            </div>\r\n                                            <div>\r\n                                                <p htmlFor=\"description\">Service Description</p>\r\n                                                <Field type='text' placeholder='Service description' id=\"description\" name=\"description\" />\r\n                                                <ErrorMessage className=\"verify_err\" name=\"description\" component=\"div\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"addServ_submit\">\r\n                                            <button type='submit'>Update</button>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Form>\r\n                        </Formik>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditService\r\n","import * as Yup from 'yup';\r\n\r\nexport const categoryValidation = Yup.object({\r\n    name: Yup.string().required('Category Name is required'),\r\n});\r\n\r\nexport const serviceValidation = Yup.object({\r\n    name: Yup.string().required('Category Name is required'),\r\n    category: Yup.string().required('Service category is required'),\r\n    price: Yup.string().required('Total Price is required'),\r\n    item: Yup.string().required('Choose Recommended Items is required'),\r\n    description: Yup.string().required('Description is required'),\r\n});\r\n\r\nexport const passwordValidation = Yup.object({\r\n    password: Yup.string().required('Password is required'),\r\n    confirmPassword: Yup.string().required('Confirm password is required').oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n});\r\n\r\nexport const verifyValidation = Yup.object({\r\n\r\n    // personal details\r\n    firstName: Yup.string().required('First Name is required'),\r\n    lastName: Yup.string().required('Last Name is required'),\r\n    email: Yup.string().email('Invalid email address').required('Email is required'),\r\n    password: Yup.string().required('Password is required'),\r\n    confirmPassword: Yup.string().required('Confirm password is required').oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n    // BUssiness location\r\n    address1: Yup.string().required('Address 1 is required'),\r\n    city: Yup.string().required('City is required'),\r\n    state: Yup.string().required('State is required'),\r\n    zipCode: Yup.string().required('Zip Code is required'),\r\n    // Bussiness Details\r\n    banner: Yup.string().required('Banner Image is required'),\r\n    logoInput: Yup.string().required('Profile Image is required'),\r\n    businessName: Yup.string().required('Business Name is required'),\r\n    taxId: Yup.string().required('Tax ID is required'),\r\n    businessPhone: Yup.string().required('Business Phone Number is required'),\r\n    front: Yup.mixed().required('Front ID image is required'),\r\n    back: Yup.mixed().required('Back ID image is required'),\r\n\r\n});\r\n\r\nexport const loginValidation = Yup.object({\r\n    email: Yup.string().email('Invalid email address').required('Email is required'),\r\n    password: Yup.string().required('Password is required'),\r\n});\r\n\r\nexport const signupValidation = Yup.object({\r\n    email: Yup.string().email('Invalid email address').required('Email is required'),\r\n    password: Yup.string().required('Password is required'),\r\n    confirmPassword: Yup.string().required('Confirm password is required').oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n});"],"names":["Clickoutside","componentRef","componentRef2","setCategoryPopup","document","addEventListener","handleClick","removeEventListener","e","ref","current","ref2","contains","target","_ref","setModal","Ref","useRef","Ref2","useEffect","_jsx","className","children","_jsxs","src","tick","alt","onClick","handleAdd","EditService","banner","setBanner","useState","modal","navigate","useNavigate","Thankyou","Sidebar","index","Formik","initialValues","name","category","price","item","description","onSubmit","values","toast","success","validationSchema","serviceValidation","Form","backImg","htmlFor","star","type","id","style","display","onChange","handleFileChange","event","file","files","reader","FileReader","onloadend","previewURL","result","readAsDataURL","Field","placeholder","ErrorMessage","component","as","value","selected","hidden","Yup","required","passwordValidation","password","confirmPassword","oneOf","verifyValidation","firstName","lastName","email","address1","city","state","zipCode","logoInput","businessName","taxId","businessPhone","front","back","loginValidation","signupValidation"],"sourceRoot":""}