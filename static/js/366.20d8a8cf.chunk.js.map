{"version":3,"file":"static/js/366.20d8a8cf.chunk.js","mappings":"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","sources":["components/Forms/AddServiceForm.jsx","pages/AddService/index.jsx","validationSchema/index.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport star from \"../../assets/images/Admin-20 (20).png\"\r\nimport backImg from \"../../assets/images/Admin-20 (29).png\"\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport { toast } from 'react-toastify'\r\nimport { serviceValidation } from '../../validationSchema'\r\n\r\nconst AddServiceForm = () =>\r\n{\r\n    const navigate = useNavigate()\r\n    const [banner, setBanner] = useState(null);\r\n\r\n    const handleFileChange = (event, type) =>\r\n    {\r\n        const file = event.target.files[0];\r\n\r\n        if (file)\r\n        {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () =>\r\n            {\r\n                const fileType = type;\r\n\r\n                if (fileType === 'banner')\r\n                {\r\n                    setBanner({\r\n                        file: file,\r\n                        previewURL: reader.result,\r\n                    });\r\n                }\r\n\r\n            };\r\n            reader.readAsDataURL(file);\r\n        } else\r\n        {\r\n            if (type === 'banner')\r\n            {\r\n                setBanner(null);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const initialValues = {\r\n        name: '',\r\n        category: '',\r\n        price: '',\r\n        item: '',\r\n        description: '',\r\n    };\r\n\r\n    // const validationSchema = Yup.object({\r\n    //     name: Yup.string().required('Category Name is required'),\r\n    //     category: Yup.string().required('Service category is required'),\r\n    //     price: Yup.string().required('Total Price is required'),\r\n    //     item: Yup.string().required('Choose Recommended Items is required'),\r\n    //     description: Yup.string().required('Description is required'),\r\n    // });\r\n\r\n    const onSubmit = (values) =>\r\n    {\r\n        toast.success(\"Service added successfully\")\r\n    };\r\n    return (\r\n        <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={serviceValidation}>\r\n            <Form>\r\n                <div className=\"addServ_header\">\r\n                    <p className=\"addServ_title\"><img src={backImg} alt='' onClick={() => navigate(-1)} />Add Services</p>\r\n                </div>\r\n                <div className=\"addServ_service\">\r\n                    <div className=\"addServ_serviceMain\">\r\n                        <p className=\"addServ_subhead\">Service Image</p>\r\n                        <div>\r\n                            <div className=\"addServ_uploadSec\">\r\n                                {!banner &&\r\n                                    <label htmlFor=\"bannerInput\">\r\n                                        <img className=\"addServ_mini\" src={star} alt='' />\r\n                                    </label>}\r\n                                <input type=\"file\" id=\"bannerInput\" style={{ display: 'none' }} onChange={(e) => handleFileChange(e, 'banner')} />\r\n                                {banner && <img className=\"addServ_file\" src={banner?.previewURL} alt='' />}\r\n                                {banner && <i className=\"fa-solid fa-trash\" onClick={() => setBanner(null)}></i>}\r\n                            </div>\r\n                            {!banner && <div className=\"verify_err\" style={{ textAlign: 'center' }}>Image is required</div>}\r\n                        </div>\r\n                        <div className=\"addServ_form\">\r\n                            <div>\r\n                                <p htmlFor=\"name\">Service Name</p>\r\n                                <Field placeholder='Service name' type=\"text\" id=\"name\" name=\"name\" />\r\n                                <ErrorMessage className=\"verify_err\" name=\"name\" component=\"div\" />\r\n                            </div>\r\n                            <div>\r\n                                <p htmlFor=\"category\">Service Category</p>\r\n                                <Field as=\"select\" id=\"category\" name=\"category\">\r\n                                    <option value=\"Fiber\" selected hidden>Select Service Category</option>\r\n                                    <option value=\"Fiber\">Storm Fiber</option>\r\n                                    <option value=\"Optical\">Optical</option>\r\n                                </Field>\r\n                                <ErrorMessage className=\"verify_err\" name=\"category\" component=\"div\" />\r\n                            </div>\r\n                            <div>\r\n                                <p htmlFor=\"name\">Total Price</p>\r\n                                <Field type='number' placeholder='Enter total price' id=\"price\" name=\"price\" />\r\n                                <ErrorMessage className=\"verify_err\" name=\"price\" component=\"div\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"addServ_form\">\r\n                            <div>\r\n                                <p htmlFor=\"name\">Choose Recommended Items</p>\r\n                                <Field as='select' placeholder='Choose recommended items' id=\"item\" name=\"item\">\r\n                                    <option value=\"Fiber\" selected hidden>Select Recommended Items</option>\r\n                                    <option value=\"Fiber\">Item 1</option>\r\n                                    <option value=\"Optical\">Item 2</option>\r\n                                </Field>\r\n                                <ErrorMessage className=\"verify_err\" name=\"item\" component=\"div\" />\r\n                            </div>\r\n                            <div>\r\n                                <p htmlFor=\"description\">Service Description</p>\r\n                                <Field type='text' placeholder='Service description' id=\"description\" name=\"description\" />\r\n                                <ErrorMessage className=\"verify_err\" name=\"description\" component=\"div\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"addServ_submit\">\r\n                            <button type='submit'>Add</button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default AddServiceForm","import React from 'react'\r\nimport Sidebar from '../../components/Sidebar'\r\nimport AddServiceForm from '../../components/Forms/AddServiceForm'\r\n\r\nconst AddService = () =>\r\n{\r\n    return (\r\n        <div>\r\n            <div className=\"mainLayout\">\r\n                <div className=\"mainLayout_parent\">\r\n                    <Sidebar index={\"2b\"} />\r\n                    <div className=\"verify\">\r\n                    <AddServiceForm />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddService\r\n","import * as Yup from 'yup';\r\n\r\nexport const categoryValidation = Yup.object({\r\n    name: Yup.string().required('Category Name is required'),\r\n});\r\n\r\nexport const serviceValidation = Yup.object({\r\n    name: Yup.string().required('Category Name is required'),\r\n    category: Yup.string().required('Service category is required'),\r\n    price: Yup.string().required('Total Price is required'),\r\n    item: Yup.string().required('Choose Recommended Items is required'),\r\n    description: Yup.string().required('Description is required'),\r\n});\r\n\r\nexport const passwordValidation = Yup.object({\r\n    password: Yup.string().required('Password is required'),\r\n    confirmPassword: Yup.string().required('Confirm password is required').oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n});\r\n\r\nexport const verifyValidation = Yup.object({\r\n\r\n    // personal details\r\n    firstName: Yup.string().required('First Name is required'),\r\n    lastName: Yup.string().required('Last Name is required'),\r\n    email: Yup.string().email('Invalid email address').required('Email is required'),\r\n    password: Yup.string().required('Password is required'),\r\n    confirmPassword: Yup.string().required('Confirm password is required').oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n    // BUssiness location\r\n    address1: Yup.string().required('Address 1 is required'),\r\n    city: Yup.string().required('City is required'),\r\n    state: Yup.string().required('State is required'),\r\n    zipCode: Yup.string().required('Zip Code is required'),\r\n    // Bussiness Details\r\n    businessName: Yup.string().required('Business Name is required'),\r\n    taxId: Yup.string().required('Tax ID is required'),\r\n    // businessPhone: Yup.string().required('Business Phone Number is required'),\r\n\r\n    // front: Yup.mixed().required('Front ID image is required'),\r\n    // back: Yup.mixed().required('Back ID image is required'),\r\n    // banner: Yup.string().required('Banner Image is required'),\r\n    // logoInput: Yup.string().required('Profile Image is required'),\r\n\r\n});\r\n\r\nexport const loginValidation = Yup.object({\r\n    email: Yup.string().email('Invalid email address').required('Email is required'),\r\n    password: Yup.string().required('Password is required'),\r\n});\r\n\r\nexport const signupValidation = Yup.object({\r\n    email: Yup.string().email('Invalid email address').required('Email is required'),\r\n    password: Yup.string().required('Password is required'),\r\n    confirmPassword: Yup.string().required('Confirm password is required').oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n});"],"names":["AddServiceForm","navigate","useNavigate","banner","setBanner","useState","_jsx","Formik","initialValues","name","category","price","item","description","onSubmit","values","toast","success","validationSchema","serviceValidation","children","_jsxs","Form","className","src","backImg","alt","onClick","htmlFor","star","type","id","style","display","onChange","e","handleFileChange","event","file","target","files","reader","FileReader","onloadend","previewURL","result","readAsDataURL","textAlign","Field","placeholder","ErrorMessage","component","as","value","selected","hidden","AddService","Sidebar","index","Yup","required","passwordValidation","password","confirmPassword","oneOf","verifyValidation","firstName","lastName","email","address1","city","state","zipCode","businessName","taxId","loginValidation","signupValidation"],"sourceRoot":""}