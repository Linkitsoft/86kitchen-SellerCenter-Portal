{"version":3,"file":"static/js/666.632f9f4f.chunk.js","mappings":"oNAOA,MA6DA,EA7DcA,KAGV,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAS,MAE3CG,GAAWC,EAAAA,EAAAA,MAYjB,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,UAClBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,OAAKI,IAAKC,EAASC,IAAI,OAAOC,QAASA,IAAMT,EAAS,YACtDE,EAAAA,EAAAA,KAAA,KAAGC,UAAU,OAAMC,SAAC,uBAExBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,UAC/BF,EAAAA,EAAAA,KAACQ,EAAAA,GAAM,CAACC,cAlBF,CAClBC,MAAO,GACPC,SAAU,IAgBwCC,SAbpCC,IAEdf,EAAS,gBAAiB,CAAEgB,MAAO,CAAEC,WAAW,IAAS,EAWaC,iBAAkBC,EAAAA,GAAgBf,UACxFC,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAAAhB,SAAA,EACDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,SAAOmB,QAAQ,QAAOjB,SAAC,YACvBF,EAAAA,EAAAA,KAACoB,EAAAA,GAAK,CAACC,KAAK,OAAOC,GAAG,QAAQC,KAAK,WACnCvB,EAAAA,EAAAA,KAACwB,EAAAA,GAAY,CAACvB,UAAU,YAAYsB,KAAK,QAAQE,UAAU,YAE/DtB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,SAAOmB,QAAQ,WAAUjB,SAAC,cAC1BF,EAAAA,EAAAA,KAACoB,EAAAA,GAAK,CAACC,MAAkB,IAAZ5B,EAAoB,WAAa,OAAQ6B,GAAG,WAAWC,KAAK,cACzEvB,EAAAA,EAAAA,KAAA,KACIO,QAASA,IAAMb,GAAYD,GAC3BQ,WACgB,IAAZR,EACM,kCACA,+BAGdO,EAAAA,EAAAA,KAACwB,EAAAA,GAAY,CAACvB,UAAU,YAAYsB,KAAK,WAAWE,UAAU,YAElEzB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,UAC/BF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CAAC9B,aAAcA,EAAcC,gBAAiBA,MAE3DD,IACGI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UAC3BF,EAAAA,EAAAA,KAAA,UAAQqB,KAAK,SAAQnB,SAAC,eAE9BC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,eAAcC,SAAA,CAAC,gCAAuBF,EAAAA,EAAAA,KAAA,QAAMO,QAASA,IAAMT,EAAS,WAAWI,SAAC,0BAK3G,C","sources":["pages/Login/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport logoImg from \"../../assets/images/Admin-20 (75).png\";\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport { loginValidation } from \"../../validationSchema\";\r\nimport Recaptcha from \"../../components/Recaptcha\";\r\n\r\nconst Login = () =>\r\n{\r\n\r\n    const [eyeIcon, setEyeIcon] = useState(false);\r\n    const [captchaValue, setCaptchaValue] = useState(null);\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const initialValues = {\r\n        email: '',\r\n        password: '',\r\n    };\r\n\r\n    const onSubmit = (values) =>\r\n    {\r\n        navigate(\"/verification\", { state: { fromLogin: true } })\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login_box\">\r\n                <div className=\"login_topHead\">\r\n                    <img src={logoImg} alt=\"logo\" onClick={() => navigate('/home')} />\r\n                    <p className=\"head\">Partner Center</p>\r\n                </div>\r\n                <div className=\"login_inputSection\">\r\n                    <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={loginValidation}>\r\n                        <Form>\r\n                            <div className=\"login_inputWrapper\">\r\n                                <label htmlFor=\"email\">Email:</label>\r\n                                <Field type=\"text\" id=\"email\" name=\"email\" />\r\n                                <ErrorMessage className=\"login_err\" name=\"email\" component=\"div\" />\r\n                            </div>\r\n                            <div className=\"login_inputWrapper\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <Field type={eyeIcon === false ? \"password\" : \"text\"} id=\"password\" name=\"password\" />\r\n                                <i\r\n                                    onClick={() => setEyeIcon(!eyeIcon)}\r\n                                    className={\r\n                                        eyeIcon === false\r\n                                            ? \"fa-regular showEye fa-eye-slash\"\r\n                                            : \"fa-regular showEye fa-eye\"\r\n                                    }\r\n                                ></i>\r\n                                <ErrorMessage className=\"login_err\" name=\"password\" component=\"div\" />\r\n                            </div>\r\n                            <div className=\"login_inputWrapper\">\r\n                                <Recaptcha captchaValue={captchaValue} setCaptchaValue={setCaptchaValue} />\r\n                            </div>\r\n                            {captchaValue &&\r\n                                <div className=\"login_loginBtn\">\r\n                                    <button type=\"submit\">Sign In</button>\r\n                                </div>}\r\n                            <p className=\"login_signup\">Donâ€™t have an account? <span onClick={() => navigate(\"/signup\")}>Sign up</span></p>\r\n                        </Form>\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Login;"],"names":["Login","eyeIcon","setEyeIcon","useState","captchaValue","setCaptchaValue","navigate","useNavigate","_jsx","className","children","_jsxs","src","logoImg","alt","onClick","Formik","initialValues","email","password","onSubmit","values","state","fromLogin","validationSchema","loginValidation","Form","htmlFor","Field","type","id","name","ErrorMessage","component","Recaptcha"],"sourceRoot":""}